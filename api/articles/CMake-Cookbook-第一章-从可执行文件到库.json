{"title":"CMake Cookbook 第一章：从可执行文件到库","uid":"a98e3c9f33f729f12ec0aac8a3ccd800","slug":"CMake-Cookbook-第一章-从可执行文件到库","date":"2022-10-31T13:15:36.000Z","updated":"2022-11-07T07:37:50.157Z","comments":true,"path":"api/articles/CMake-Cookbook-第一章-从可执行文件到库.json","keywords":null,"cover":null,"content":"<p>CMake Cookbook 第一章：从可执行文件到库</p>\n<span id=\"more\"></span>\n<!-- markdownlint-disable MD041 MD002-->\n\n<p>本文是对 <a href=\"https://github.com/xiaoweiChen/CMake-Cookbook/blob/master/SUMMARY.md\">cmake cookbook中文翻译</a>的学习笔记记录，建议看原文。</p>\n<p>CMake是一个构建系统生成器。将描述构建系统(如：Unix Makefile、Ninja、Visual Studio等)应当如何操作才能编译代码。</p>\n<pre class=\"line-numbers language-cmake\" data-language=\"cmake\"><code class=\"language-cmake\"><span class=\"token keyword\">cmake_minimum_required</span><span class=\"token punctuation\">(</span><span class=\"token property\">VERSION</span> <span class=\"token number\">3.5</span> FATAL_ERROR<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">project</span><span class=\"token punctuation\">(</span>recipe-<span class=\"token number\">01</span> LANGUAGES C CXX<span class=\"token punctuation\">)</span> <span class=\"token comment\"># 可以设置语言</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<h2 id=\"切换生成器\"><a href=\"#切换生成器\" class=\"headerlink\" title=\"切换生成器\"></a>切换生成器</h2><p>CMake语言不区分大小写，但是参数区分</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">mkdir</span> <span class=\"token parameter variable\">-p</span> build\n<span class=\"token builtin class-name\">cd</span> build\ncmake <span class=\"token parameter variable\">-G</span> Ninja <span class=\"token punctuation\">..</span> <span class=\"token comment\"># -G切换生成器</span>\n<span class=\"token comment\"># cmake -H. -Bbuild</span>\n<span class=\"token comment\"># -H.代表在当前目录搜索根CMakeLists.txtx文件，</span>\n<span class=\"token comment\"># -Bbuild表示在名为build的目录下生成所有文件</span>\ncmake <span class=\"token parameter variable\">--build</span> <span class=\"token builtin class-name\">.</span> <span class=\"token comment\"># 编译</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"静态库与动态库\"><a href=\"#静态库与动态库\" class=\"headerlink\" title=\"静态库与动态库\"></a>静态库与动态库</h2><pre class=\"line-numbers language-cmake\" data-language=\"cmake\"><code class=\"language-cmake\"><span class=\"token keyword\">add_library</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">${</span>libname_static<span class=\"token punctuation\">}</span> <span class=\"token namespace\">STATIC</span> xxx.h xxx.cpp<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">add_library</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">${</span>libname_shared<span class=\"token punctuation\">}</span> <span class=\"token namespace\">SHARED</span> xxx.h xxx.cpp<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">target_link_libraries</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">${</span>exename<span class=\"token punctuation\">}</span> <span class=\"token punctuation\">${</span>libname_static<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">target_link_libraries</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">${</span>exename<span class=\"token punctuation\">}</span> <span class=\"token punctuation\">${</span>libname_shared<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><a href=\"https://crascit.com/2016/01/31/enhanced-source-file-handling-with-target_sources/\">target_sources介绍</a></p>\n<p><code>target_include_directories</code></p>\n<h2 id=\"条件判断\"><a href=\"#条件判断\" class=\"headerlink\" title=\"条件判断\"></a>条件判断</h2><pre class=\"line-numbers language-cmake\" data-language=\"cmake\"><code class=\"language-cmake\">\n<span class=\"token keyword\">set</span><span class=\"token punctuation\">(</span>USE_LIBRARY <span class=\"token boolean\">OFF</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 硬编码 </span>\n<span class=\"token comment\"># 1, ON, YES, true, Y,非0数，为true</span>\n<span class=\"token comment\"># 0, OFF, NO, false, N, IGNORE, NOTFOUND, 空字符串，为false</span>\n\n<span class=\"token keyword\">message</span><span class=\"token punctuation\">(</span>STATUS <span class=\"token string\">\"Compile source into a library? <span class=\"token interpolation\"><span class=\"token punctuation\">${</span><span class=\"token variable\">USE_LIBRARY</span><span class=\"token punctuation\">}</span></span>\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">list</span><span class=\"token punctuation\">(</span>APPEND _sources Message.hpp Message.cpp<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>USE_LIBRARY<span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">add_library</span><span class=\"token punctuation\">(</span>message <span class=\"token punctuation\">${</span>_sources<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">add_executable</span><span class=\"token punctuation\">(</span>hello-world hello-world.cpp<span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">target_link_libraries</span><span class=\"token punctuation\">(</span>hello-world message<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">else</span><span class=\"token punctuation\">(</span>USE_LIBRARY<span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">add_executable</span><span class=\"token punctuation\">(</span>hello-world hello-world.cpp <span class=\"token punctuation\">${</span>_sources<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">endif</span><span class=\"token punctuation\">(</span>USE_LIBRARY<span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>局部变量可以在名称前加下划线</p>\n<h2 id=\"cmake-选项-option\"><a href=\"#cmake-选项-option\" class=\"headerlink\" title=\"cmake 选项 option\"></a>cmake 选项 option</h2><pre class=\"line-numbers language-cmake\" data-language=\"cmake\"><code class=\"language-cmake\"><span class=\"token keyword\">include</span><span class=\"token punctuation\">(</span>CMakeDependentOption<span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># cmake可以通过包含模块扩展语法和功能</span>\n<span class=\"token comment\"># cmake --help-module CMakeDependentOption 可以查看手册</span>\n\n<span class=\"token keyword\">option</span><span class=\"token punctuation\">(</span>USE_LIBRARY <span class=\"token string\">\"Compile source into a library\"</span> <span class=\"token boolean\">OFF</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 使用方式 option(变量名 帮助字符串 默认值)</span>\n<span class=\"token comment\"># cmake -H. -Bbuild -D USE_LIBRARY=ON 可以开启选项</span>\n\n<span class=\"token comment\"># 有依赖关系到选项</span>\n<span class=\"token function\">cmake_dependent_option</span><span class=\"token punctuation\">(</span>\n\tMAKE_STATIC_LIBRARY <span class=\"token string\">\"Compile sources into a static library\"</span> <span class=\"token boolean\">OFF</span>\n\t<span class=\"token string\">\"USE_LIBRARY\"</span> <span class=\"token boolean\">ON</span>\n\t<span class=\"token punctuation\">)</span>\n\t\n<span class=\"token function\">cmake_dependent_option</span><span class=\"token punctuation\">(</span>\n\tMAKE_SHARED_LIBRARY <span class=\"token string\">\"Compile sources into a shared library\"</span> <span class=\"token boolean\">ON</span>\n\t<span class=\"token string\">\"USE_LIBRARY\"</span> <span class=\"token boolean\">ON</span>\n\t<span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<h2 id=\"指定编译器\"><a href=\"#指定编译器\" class=\"headerlink\" title=\"指定编译器\"></a>指定编译器</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">cmake -H. <span class=\"token parameter variable\">-Bbuild</span> <span class=\"token parameter variable\">-D</span> <span class=\"token assign-left variable\">CMAKE_CXX_COMPILER</span><span class=\"token operator\">=</span>clang++\n<span class=\"token comment\"># 指定编译器</span>\n\ncmake --system-information information.txt\n<span class=\"token comment\"># 可用的编译器和编译器标志</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<h2 id=\"切换构建类型\"><a href=\"#切换构建类型\" class=\"headerlink\" title=\"切换构建类型\"></a>切换构建类型</h2><p>CMake可以配置构建类型，例如：Debug、Release等。配置时，可以为Debug或Release构建设置相关的选项或属性，例如：编译器和链接器标志。控制生成构建系统使用的配置变量是<code>CMAKE_BUILD_TYPE</code>。该变量默认为空，可选值如下：</p>\n<p>Debug, Release<br>RelWithDebInfo：用于构建较少的优化库或可执行文件，包含调试符号。<br>MinSizeRel：用于不增加目标代码大小的优化方式来构建库或可执行文件。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">cmake -H. <span class=\"token parameter variable\">-Bbuild</span> <span class=\"token parameter variable\">-D</span> <span class=\"token assign-left variable\">CMAKE_BUILD_TYPE</span><span class=\"token operator\">=</span>Debug<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-cmake\" data-language=\"cmake\"><code class=\"language-cmake\"><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">NOT</span> <span class=\"token variable\">CMAKE_BUILD_TYPE</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 便于命令行覆盖</span>\n\t<span class=\"token keyword\">set</span><span class=\"token punctuation\">(</span><span class=\"token variable\">CMAKE_BUILD_TYPE</span> Release <span class=\"token variable\">CACHE</span> STRING <span class=\"token string\">\"Build type\"</span> FORCE<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">endif</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">message</span><span class=\"token punctuation\">(</span>STATUS <span class=\"token string\">\"Build type: <span class=\"token interpolation\"><span class=\"token punctuation\">${</span><span class=\"token variable\">CMAKE_BUILD_TYPE</span><span class=\"token punctuation\">}</span></span>\"</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>为Release版和Debug版单独创建构建目录会比较方便。</p>\n<h2 id=\"设置编译选项\"><a href=\"#设置编译选项\" class=\"headerlink\" title=\"设置编译选项\"></a>设置编译选项</h2><pre class=\"line-numbers language-cmake\" data-language=\"cmake\"><code class=\"language-cmake\"><span class=\"token keyword\">list</span><span class=\"token punctuation\">(</span>APPEND flags <span class=\"token string\">\"-fPIC\"</span> <span class=\"token string\">\"-Wall\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">NOT</span> <span class=\"token variable\">WIN32</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">list</span><span class=\"token punctuation\">(</span>APPEND flags <span class=\"token string\">\"-Wextra\"</span> <span class=\"token string\">\"-Wpedantic\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">endif</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">target_compile_options</span><span class=\"token punctuation\">(</span>testlib\n  <span class=\"token namespace\">PRIVATE</span>\n    <span class=\"token punctuation\">${</span>flags<span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># PRIVATE，编译选项会应用于给定的目标，不会传递给与目标相关的目标</span>\n<span class=\"token comment\"># INTERFACE，给定的编译选项将只应用于指定目标，并传递给与目标相关的目标。</span>\n<span class=\"token comment\"># PUBLIC，编译选项将应用于指定目标和使用它的目标。</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">cmake <span class=\"token parameter variable\">--build</span> <span class=\"token builtin class-name\">.</span> -- <span class=\"token assign-left variable\">VERBOSE</span><span class=\"token operator\">=</span><span class=\"token number\">1</span>\n<span class=\"token comment\"># 设置VERBOSE可以看到详细的编译参数和过程</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n\n\n<pre class=\"line-numbers language-cmake\" data-language=\"cmake\"><code class=\"language-cmake\"><span class=\"token keyword\">set</span><span class=\"token punctuation\">(</span>COMPILER_FLAGS<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">set</span><span class=\"token punctuation\">(</span>COMPILER_FLAGS_DEBUG<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">set</span><span class=\"token punctuation\">(</span>COMPILER_FLAGS_RELEASE<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">CMAKE_CXX_COMPILER_ID</span> <span class=\"token operator\">MATCHES</span> GNU<span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">list</span><span class=\"token punctuation\">(</span>APPEND CXX_FLAGS <span class=\"token string\">\"-fno-rtti\"</span> <span class=\"token string\">\"-fno-exceptions\"</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">list</span><span class=\"token punctuation\">(</span>APPEND CXX_FLAGS_DEBUG <span class=\"token string\">\"-Wsuggest-final-types\"</span> <span class=\"token string\">\"-Wsuggest-final-methods\"</span> <span class=\"token string\">\"-Wsuggest-override\"</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">list</span><span class=\"token punctuation\">(</span>APPEND CXX_FLAGS_RELEASE <span class=\"token string\">\"-O3\"</span> <span class=\"token string\">\"-Wno-unused\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">endif</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token variable\">CMAKE_CXX_COMPILER_ID</span> <span class=\"token operator\">MATCHES</span> Clang<span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">list</span><span class=\"token punctuation\">(</span>APPEND CXX_FLAGS <span class=\"token string\">\"-fno-rtti\"</span> <span class=\"token string\">\"-fno-exceptions\"</span> <span class=\"token string\">\"-Qunused-arguments\"</span> <span class=\"token string\">\"-fcolor-diagnostics\"</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">list</span><span class=\"token punctuation\">(</span>APPEND CXX_FLAGS_DEBUG <span class=\"token string\">\"-Wdocumentation\"</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">list</span><span class=\"token punctuation\">(</span>APPEND CXX_FLAGS_RELEASE <span class=\"token string\">\"-O3\"</span> <span class=\"token string\">\"-Wno-unused\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">endif</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token function\">target_compile_option</span><span class=\"token punctuation\">(</span>compute-areas\n  <span class=\"token namespace\">PRIVATE</span>\n    <span class=\"token punctuation\">${</span>CXX_FLAGS<span class=\"token punctuation\">}</span>\n    <span class=\"token string\">\"$&lt;$&lt;CONFIG:Debug&gt;:<span class=\"token interpolation\"><span class=\"token punctuation\">${</span><span class=\"token variable\">CXX_FLAGS_DEBUG</span><span class=\"token punctuation\">}</span></span>&gt;\"</span>\n    <span class=\"token string\">\"$&lt;$&lt;CONFIG:Release&gt;:<span class=\"token interpolation\"><span class=\"token punctuation\">${</span><span class=\"token variable\">CXX_FLAGS_RELEASE</span><span class=\"token punctuation\">}</span></span>&gt;\"</span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 为不同配置使用不同flags</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<h2 id=\"设置语言标准\"><a href=\"#设置语言标准\" class=\"headerlink\" title=\"设置语言标准\"></a>设置语言标准</h2><pre class=\"line-numbers language-cmake\" data-language=\"cmake\"><code class=\"language-cmake\"><span class=\"token keyword\">set_target_properties</span><span class=\"token punctuation\">(</span>animal-farm\n  <span class=\"token namespace\">PROPERTIES</span>\n    <span class=\"token property\">CXX_STANDARD</span> <span class=\"token number\">14</span>\n    <span class=\"token property\">CXX_EXTENSIONS</span> <span class=\"token boolean\">OFF</span> <span class=\"token comment\"># 只启用ISO C++标准的编译器标志，而不使用特定编译器的扩展。</span>\n    <span class=\"token property\">CXX_STANDARD_REQUIRED</span> <span class=\"token boolean\">ON</span> <span class=\"token comment\"># 如果这个版本不可用，CMake将停止配置并出现错误</span>\n  <span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<h2 id=\"循环\"><a href=\"#循环\" class=\"headerlink\" title=\"循环\"></a>循环</h2><pre class=\"line-numbers language-cmake\" data-language=\"cmake\"><code class=\"language-cmake\"><span class=\"token keyword\">list</span><span class=\"token punctuation\">(</span>\n  APPEND sources_with_lower_optimization\n    geometry_circle.cpp\n    geometry_rhombus.cpp\n  <span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">message</span><span class=\"token punctuation\">(</span>STATUS <span class=\"token string\">\"Setting source properties using IN LISTS syntax:\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">foreach</span><span class=\"token punctuation\">(</span>_source IN LISTS sources_with_lower_optimization<span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">set_source_files_properties</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">${</span>_source<span class=\"token punctuation\">}</span> <span class=\"token namespace\">PROPERTIES</span> <span class=\"token property\">COMPILE_FLAGS</span> -O2<span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">message</span><span class=\"token punctuation\">(</span>STATUS <span class=\"token string\">\"Appending -O2 flag for <span class=\"token interpolation\"><span class=\"token punctuation\">${</span><span class=\"token variable\">_source</span><span class=\"token punctuation\">}</span></span>\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">endforeach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">message</span><span class=\"token punctuation\">(</span>STATUS <span class=\"token string\">\"Querying sources properties using plain syntax:\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">foreach</span><span class=\"token punctuation\">(</span>_source <span class=\"token punctuation\">${</span>sources_with_lower_optimization<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">get_source_file_property</span><span class=\"token punctuation\">(</span>_flags <span class=\"token punctuation\">${</span>_source<span class=\"token punctuation\">}</span> <span class=\"token property\">COMPILE_FLAGS</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">message</span><span class=\"token punctuation\">(</span>STATUS <span class=\"token string\">\"Source <span class=\"token interpolation\"><span class=\"token punctuation\">${</span><span class=\"token variable\">_source</span><span class=\"token punctuation\">}</span></span> has the following extra COMPILE_FLAGS: <span class=\"token interpolation\"><span class=\"token punctuation\">${</span><span class=\"token variable\">_flags</span><span class=\"token punctuation\">}</span></span>\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">endforeach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><code>set_source_files_properties(file PROPERTIES property value) </code>，它将属性设置为给定文件的传递值。</p>\n<p><code>get_source_file_property(VAR file property)</code>，检索给定文件所需属性的值，并将其存储在CMake<code>VAR</code>变量中。</p>\n<ol>\n<li><p>人文/社会网络学分</p>\n</li>\n<li><p>人文素质活动，线上的文体活动/如何证明参加过迎新晚会等活动</p>\n</li>\n<li><p>其他毕业要求，例如体质等等</p>\n</li>\n<li><p>两次SRP创新分应该OK吧</p>\n</li>\n</ol>\n","text":"CMake Cookbook 第一章：从可执行文件到库 本文是对 cmake cookbook中文翻译的学习笔记记录，建议看原文。 CMake是一个构建系统生成器。将描述构建系统(如：Unix Makefile、Ninja、Visual Studio等)应当如何操作才能编译代码。...","link":"","photos":[],"count_time":{"symbolsCount":"4.4k","symbolsTime":"4 mins."},"categories":[{"name":"笔记","slug":"笔记","count":18,"path":"api/categories/笔记.json"}],"tags":[{"name":"CMake","slug":"CMake","count":2,"path":"api/tags/CMake.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%88%87%E6%8D%A2%E7%94%9F%E6%88%90%E5%99%A8\"><span class=\"toc-text\">切换生成器</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%9D%99%E6%80%81%E5%BA%93%E4%B8%8E%E5%8A%A8%E6%80%81%E5%BA%93\"><span class=\"toc-text\">静态库与动态库</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%9D%A1%E4%BB%B6%E5%88%A4%E6%96%AD\"><span class=\"toc-text\">条件判断</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#cmake-%E9%80%89%E9%A1%B9-option\"><span class=\"toc-text\">cmake 选项 option</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%8C%87%E5%AE%9A%E7%BC%96%E8%AF%91%E5%99%A8\"><span class=\"toc-text\">指定编译器</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%88%87%E6%8D%A2%E6%9E%84%E5%BB%BA%E7%B1%BB%E5%9E%8B\"><span class=\"toc-text\">切换构建类型</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%AE%BE%E7%BD%AE%E7%BC%96%E8%AF%91%E9%80%89%E9%A1%B9\"><span class=\"toc-text\">设置编译选项</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%AE%BE%E7%BD%AE%E8%AF%AD%E8%A8%80%E6%A0%87%E5%87%86\"><span class=\"toc-text\">设置语言标准</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%BE%AA%E7%8E%AF\"><span class=\"toc-text\">循环</span></a></li></ol>","author":{"name":"YiLongDong","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"CMake Cookbook 第二章: 检测环境","uid":"436815cb6db7489e3a0d980760c16cd5","slug":"CMake-Cookbook-第二章-检测环境","date":"2022-10-31T14:29:40.000Z","updated":"2022-10-31T14:53:40.028Z","comments":true,"path":"api/articles/CMake-Cookbook-第二章-检测环境.json","keywords":null,"cover":null,"text":"CMake Cookbook 第二章: 检测环境 本文是对 cmake cookbook中文翻译的学习笔记记录，建议看原文。 检测操作系统环境if(CMAKE_SYSTEM_NAME STREQUAL \"Linux\") message(STATUS \"Configuring on...","link":"","photos":[],"count_time":{"symbolsCount":"2.5k","symbolsTime":"2 mins."},"categories":[{"name":"笔记","slug":"笔记","count":18,"path":"api/categories/笔记.json"}],"tags":[{"name":"CMake","slug":"CMake","count":2,"path":"api/tags/CMake.json"}],"author":{"name":"YiLongDong","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"Javascript学习 基础","uid":"cee19f16f6880f19e7601a3124300b66","slug":"Javascript学习-基础","date":"2022-10-30T15:10:11.000Z","updated":"2022-11-03T14:54:36.706Z","comments":true,"path":"api/articles/Javascript学习-基础.json","keywords":null,"cover":null,"text":"Javascript基础知识 javascript mdn JavaScript教程 ECMAScript6学习 网道 ","link":"","photos":[],"count_time":{"symbolsCount":65,"symbolsTime":"1 mins."},"categories":[{"name":"笔记","slug":"笔记","count":18,"path":"api/categories/笔记.json"}],"tags":[{"name":"Javascript","slug":"Javascript","count":1,"path":"api/tags/Javascript.json"}],"author":{"name":"YiLongDong","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}